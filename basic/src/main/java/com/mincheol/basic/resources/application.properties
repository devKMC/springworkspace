server.port=4000


spring.application.name=basic

# MySQL (Database) connector
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/basic?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root

# Github OAuth2.0 서비스 서버측 설정
spring.security.oauth2.client.registration.github.client-id=github-client-id=d3682889509e9b445567
spring.security.oauth2.client.registration.github.client-secret=github-client-secret=d5cab3376a8f2c3f24721924aa4d0a987a46e42e
# http://localhost:4000/oauth2/callback/github // baseurl 작성으로 4000번을 기본으로 잡고 나머지는 깃허브 마지막 {}는 github로 인식함
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
# scope 어떠한 데이터를 가져올건지 지정 깃허브 만의 작업
spring.security.oauth2.client.registration.github.scope=read:user

# Github OAuth2.0 인증 서버 설정
# 인증 받는 곳, 토큰 받는 곳, 유저 받는 곳, 유저 네임 속성 받는 곳 URI 지정 (URI는 식별 URL은 위치 가르킴)
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

# jwt 비밀키 환경 변수
jwt.secret-key = zxcvasdfqwer1234!@#$mnbLKJHpoiu0987
